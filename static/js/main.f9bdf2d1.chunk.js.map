{"version":3,"sources":["reportWebVitals.js","Pages/PrivatePages/Logout.js","Pages/PrivatePages/Home.js","Pages/PrivatePages/Search.js","Pages/PrivatePages/Details.js","routes/PrivateRoutes.js","Pages/PublicPages/Login.js","routes/PublicRoutes.js","routes/Routes.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Logout","useContext","Validation","setToken","token","id","onClick","e","preventDefault","localStorage","setItem","Home","history","TeamState","team","setTeam","useState","stateToForceReRender","setStateToForceReRender","cumulativeOrder","setCumulativeOrder","inteligencia","fuerza","velocidad","durabilidad","poder","combate","peso","altura","teamCumulative","setTeamCumulative","handleClick","a","teamValue","forEach","hero","index","target","heroIndex","splice","prevState","useEffect","console","log","teamCumulativeValue","averageHeight","averageWeight","isNaN","parseInt","powerstats","intelligence","strength","speed","durability","power","combat","appearance","height","slice","heroHeight","split","weight","heroWeight","length","maximumIndex","cumulativeOrderValue","Object","entries","maximumValue","map","variable","firstElement","unshift","getItem","className","to","cumulative","src","image","url","name","href","Search","path","Path","searchResult","setSearchResult","filter","heroValue","biography","alignment","searchResultValue","alert","initialValues","heroName","onSubmit","values","resetForm","axios","method","res","data","error","undefined","results","catch","err","validate","errors","type","placeholder","component","value","result","Details","match","setHero","get","params","aliases","alias","work","base","React","createContext","PrivateRoutes","Provider","exact","Login","mail","pass","email","password","PublicRoutes","Routes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9bdf2d1.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useContext} from \"react\";\nimport { Validation } from '../../routes/Routes';\n\n\nconst Logout = () => {\n    const { token, setToken } = useContext(Validation);\n    function handleClick(e){\n        e.preventDefault();\n        localStorage.setItem(\"loginToken\",\"\");\n        setToken();\n    }\n    return(\n        <button id=\"logout\" onClick={handleClick}>Logout</button>\n    );\n}\n\nexport default Logout;","import React, { useState, useEffect, useContext } from 'react';\nimport { TeamState } from '../../routes/PrivateRoutes';\nimport { Validation } from '../../routes/Routes';\nimport { Link } from 'react-router-dom';\nimport Logout from './Logout';\n\nconst Home = ({ history }) => {\n  const { team, setTeam } = useContext(TeamState);\n  const { token, setToken } = useContext(Validation)\n  const [ stateToForceReRender, setStateToForceReRender ] = useState(0);\n  const [ cumulativeOrder, setCumulativeOrder ] = useState([]);\n  const [ teamCumulative, setTeamCumulative ] = useState({\n    inteligencia:0,\n    fuerza:0,\n    velocidad:0,\n    durabilidad:0,\n    poder:0,\n    combate:0,\n    peso:0,\n    altura:0\n  })\n\n  async function handleClick(e){\n    e.preventDefault();\n    let teamValue = team;\n    let heroIndex;\n    teamValue.forEach((hero, index)=>{\n      if(hero.id===e.target.id){\n        heroIndex = index;\n        return;\n      }\n    })\n    teamValue.splice(heroIndex,1);\n    await setTeam(teamValue);\n    setStateToForceReRender((prevState)=>++prevState);\n  }\n  \n  useEffect(() => {\n    console.log(teamCumulative)\n      let teamCumulativeValue = {\n        inteligencia:0,\n        fuerza:0,\n        velocidad:0,\n        durabilidad:0,\n        poder:0,\n        combate:0,\n        peso:0,\n        altura:0\n      };\n      let averageHeight = 0, averageWeight = 0;\n      team.forEach((hero)=>{\n        teamCumulativeValue.inteligencia = !isNaN(parseInt(hero.powerstats.intelligence))?\n          teamCumulativeValue.inteligencia+parseInt(hero.powerstats.intelligence):teamCumulativeValue.inteligencia;\n        teamCumulativeValue.fuerza = !isNaN(parseInt(hero.powerstats.strength))?\n          teamCumulativeValue.fuerza+parseInt(hero.powerstats.strength):teamCumulativeValue.fuerza;\n        teamCumulativeValue.velocidad = !isNaN(parseInt(hero.powerstats.speed))?\n          teamCumulativeValue.velocidad+parseInt(hero.powerstats.speed):teamCumulativeValue.velocidad;\n        teamCumulativeValue.durabilidad = !isNaN(parseInt(hero.powerstats.durability))?\n          teamCumulativeValue.durabilidad+parseInt(hero.powerstats.durability):teamCumulativeValue.durabilidad;\n        teamCumulativeValue.poder = !isNaN(parseInt(hero.powerstats.power))?\n          teamCumulativeValue.poder+parseInt(hero.powerstats.power):teamCumulativeValue.poder;\n        teamCumulativeValue.combate = !isNaN(parseInt(hero.powerstats.combat))?\n          teamCumulativeValue.combate+parseInt(hero.powerstats.combat):teamCumulativeValue.combate;\n        if(hero.appearance.height[1].slice(-3)===\" cm\"){\n          let heroHeight = hero.appearance.height[1].split(\" \");\n          heroHeight = parseInt(heroHeight[0]);\n          averageHeight += heroHeight;\n        }\n        if(hero.appearance.weight[1].slice(-3)===\" kg\"){\n          let heroWeight = hero.appearance.weight[1].split(\" \");\n          heroWeight = parseInt(heroWeight[0]);\n          averageWeight += heroWeight;\n        }\n      })\n      averageHeight=team.length===0?0:averageHeight/team.length;\n      averageWeight=team.length===0?0:averageWeight/team.length;\n      teamCumulativeValue.altura=averageHeight;\n      teamCumulativeValue.peso=averageWeight;\n      console.log(teamCumulativeValue);\n\n      let cumulativeOrderValue = Object.entries(teamCumulativeValue);\n      let maximumValue = 0;\n      let maximumIndex;\n      cumulativeOrderValue.map((variable, index)=>{\n        if(variable[0]===\"peso\"||variable[0]===\"altura\"){\n          return;\n        }else{ \n          if(variable[1]>maximumValue){\n            maximumValue = variable[1];\n            maximumIndex = index;\n          }\n        }\n      })\n      const firstElement = cumulativeOrderValue.splice(maximumIndex,1);\n      console.log(firstElement)\n      cumulativeOrderValue.unshift(firstElement[0]);\n      console.log(cumulativeOrderValue)\n      setTeamCumulative(teamCumulativeValue);\n      setCumulativeOrder(cumulativeOrderValue);\n  },[stateToForceReRender])\n\n  useEffect(() => {\n    if(token!==localStorage.getItem(\"loginToken\")){\n      localStorage.setItem(\"loginToken\",\"\");\n      setToken();\n    }\n  })\n\n  return (\n    <>\n      <div className=\"container\">\n        <Logout/>\n        \n        <h1>EQUIPO</h1>\n        <Link to=\"/search\">Ir a búsqueda</Link>\n        <div id=\"cumulative\" className=\"container\">\n          <div>\n            <h2>ACUMULATIVO</h2>\n\n            {cumulativeOrder.length!==0&&\n            cumulativeOrder.map((cumulative)=>{\n              if(cumulative[0]===\"altura\"||cumulative[0]===\"peso\"){\n                return\n              }\n              return(<span><b>{cumulative[0]}:</b> {cumulative[1]}</span>)\n            })}\n\n            {/* <span><b>Inteligencia:</b> {teamCumulative.intelligence}</span>\n            <span><b>Fuerza:</b> {teamCumulative.strength}</span>\n            <span><b>Velocidad:</b> {teamCumulative.speed}</span>\n            <span><b>Durabilidad:</b> {teamCumulative.durability}</span>\n            <span><b>Poder:</b> {teamCumulative.power}</span>\n            <span><b>Combate:</b> {teamCumulative.combat}</span> */}\n\n            <h3>PROMEDIOS</h3>\n            <span><b>Altura:</b> {teamCumulative.altura}</span>\n            <span><b>Peso:</b> {teamCumulative.peso}</span>\n          </div>\n        </div>\n        \n        \n          {\n            team.length===0\n          ?\n          <div>No hay miembros en el equipo todavía.</div>\n          :\n            <div id=\"team\" className=\"container\">\n              <div className=\"row\">{\n                team.map((hero)=>\n                  <div className=\"col-6\">\n                    <img src={hero.image.url}/>\n                    <h1>{hero.name}</h1>\n                    <div>\n                    <Link to={`/details/${hero.id}`}>Ver Detalle</Link>\n                    <a id={hero.id} href=\"\" onClick={handleClick}>Eliminar</a>\n                    </div>\n                    <span><b>Inteligencia:</b> {hero.powerstats.intelligence}</span>\n                    <span><b>Fuerza:</b> {hero.powerstats.strength}</span>\n                    <span><b>Velocidad:</b> {hero.powerstats.speed}</span>\n                    <span><b>Durabilidad:</b> {hero.powerstats.durability}</span>\n                    <span><b>Poder:</b> {hero.powerstats.power}</span>\n                    <span><b>Combate:</b> {hero.powerstats.combat}</span>\n                  </div>\n                )\n              }\n              </div>\n            </div>\n          }\n          \n      </div>   \n    </>\n  );\n}\n\nexport default Home;","import React, { useContext, useState, useEffect } from 'react';\nimport { TeamState } from '../../routes/PrivateRoutes';\nimport { Path, Validation } from '../../routes/Routes';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Formik, ErrorMessage, Field, Form } from 'formik';\nimport Logout from './Logout';\n\nconst Search = () => {\n\n    const { team, setTeam } = useContext(TeamState);\n    const { token, setToken } = useContext(Validation)\n    const path = useContext(Path);\n    const [ searchResult, setSearchResult ] = useState([])\n    \n      function handleClick(e){\n        e.preventDefault();\n        if(team.length===0||team.filter((hero)=>hero.id===e.target.id).length===0){\n          if(team.length<6){\n            let heroValue = searchResult.filter((hero)=>{\n              if(hero.id===e.target.id){\n                return true;\n              }\n          });\n          if((team.filter((hero)=>hero.biography.alignment===\"bad\").length<3&&heroValue[0].biography.alignment===\"bad\")||\n          (team.filter((hero)=>hero.biography.alignment===\"good\").length<3&&heroValue[0].biography.alignment===\"good\")){\n            let searchResultValue = searchResult;\n            searchResultValue = searchResultValue.filter((hero)=>{\n              if(hero.id!==e.target.id){\n                return true;\n              }\n            })\n            setTeam([...team,heroValue[0]]);\n            setSearchResult(searchResultValue);\n          }else if(heroValue[0].biography.alignment!==\"good\"&&heroValue[0].biography.alignment!==\"bad\"){\n            alert(\"En el equipo solamente pueden agregarse personajes que sean buenos o malos.\");\n          }else{\n            alert(\"En el equipo solamente pueden agregarse hasta tres miembros buenos y hasta tres miembros malos. Estás agregando uno de más.\");\n          }\n        }else{\n          alert(\"El equipo puede tener hasta 6 miembros\");\n        }\n\n        }else{\n          alert(\"Este superhéroe ya está agregado al equipo.\")\n        }\n    \n      }\n\n      useEffect(() => {\n        if(token!==localStorage.getItem(\"loginToken\")){\n          localStorage.setItem(\"loginToken\",\"\");\n          setToken();\n        }\n      })\n\n    return(\n        <>\n        <div id=\"search\" className=\"container\">\n          <Logout/>\n          <h1>BUSCADOR</h1>\n          <Link to=\"/\">Volver a Home</Link>\n          <Formik\n            initialValues={{\n              heroName: \"\"\n            }}\n            onSubmit={(values,{resetForm})=>{\n              axios({\n                method: 'get',\n                url: `${path}search/${values.heroName}`\n              })\n                .then((res)=>{\n                  console.log(res.data)\n                  if(res.data.error){\n                    alert(res.data.error);\n                    setSearchResult([]);\n                    resetForm();\n                  }else if(res.data.results!==undefined){\n                    let searchResultValue = res.data.results;\n                    setSearchResult(searchResultValue);\n                  }\n                })\n                .catch((err)=>{\n                  alert(err);\n                  resetForm()\n                })\n            }}\n            validate={(values)=>{\n              let errors = {}\n              if(!values.heroName){\n                errors.heroName = \"Por favor ingresar un nombre de personaje para buscar.\"\n              }\n              return errors;\n            }}\n          >\n            {({errors})=>(\n              <Form>\n                <div>\n                  <Field name=\"heroName\" type=\"text\" placeholder=\"Ingresa un nombre para buscar\"/>\n                </div>\n                <div className=\"error\">\n                  <ErrorMessage name=\"heroName\" component={()=><span className=\"text-danger\">{errors.heroName}</span>}/>\n                </div>\n                <input type=\"submit\" value=\"Buscar\"/>\n              </Form>\n            )}\n            \n          </Formik>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            {\n              searchResult.length !==0 &&\n              searchResult.map((result)=>\n                <div className=\"col-4\">\n                  <img src={result.image.url}/>\n                  <span>{result.name}</span>\n                  <button id={result.id} onClick={handleClick}>Agregar al equipo</button>\n                </div>\n              )\n            }\n          </div>\n        </div>\n        </>\n    );\n}\n\nexport default Search;","import React, { useEffect, useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Path, Validation } from '../../routes/Routes';\nimport axios from 'axios';\nimport Logout from './Logout';\n\nconst Details = ({match}) => {\n\n    const [ hero, setHero ] = useState();\n    const path = useContext(Path)\n    const { token, setToken } = useContext(Validation)\n\nuseEffect(() => {\n    if(hero===undefined||hero===null){\n        axios.get(`${path}${match.params.id}`)\n        .then((res)=>{\n            console.log(res.data)\n            setHero(res.data)\n        })\n    }\n    \n\n})\n\nuseEffect(() => {\n    if(token!==localStorage.getItem(\"loginToken\")){\n      localStorage.setItem(\"loginToken\",\"\");\n      setToken();\n    }\n  })\n    \n\n    return(\n        <>  \n        <div id=\"detailContainer\" className=\"container\">\n            <Logout/>\n            {\n                hero!==null&&hero!==undefined?\n                                \n                <div className=\"detail\">\n                    <div>\n                        <h1>{hero.name}</h1>\n                        <Link to=\"/\">Volver a Home</Link>\n                        <img src={hero.image.url}/>\n                        <span><b>Peso:</b> {hero.appearance.weight[0] + \" / \"+hero.appearance.weight[1]}</span>\n                        <span><b>Altura:</b> {hero.appearance.height[0] + \" / \" +hero.appearance.height[1]}</span>\n                        <span><b>Alias:</b> {hero.biography.aliases.map((alias, index)=>{\n                            if(index<hero.biography.aliases.length-1){\n                                return alias + \", \";\n                            }else{\n                                return alias + \".\"\n                            }\n                            })}</span>\n                        <span><b>Color de ojos:</b> {hero.appearance[\"eye-color\"]}</span>\n                        <span><b>Color de cabello:</b> {hero.appearance[\"hair-color\"]}</span>\n                        <span><b>Lugar de trabajo:</b> {hero.work.base}</span>\n                    </div>\n                </div>\n                :\n                \"\"\n            }\n        </div>\n        </>\n    );\n\n}\n\nexport default Details;","import React, { useState } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Home from '../Pages/PrivatePages/Home';\nimport Search from '../Pages/PrivatePages/Search';\nimport Details from '../Pages/PrivatePages/Details';\n\nexport const TeamState = React.createContext();\n\nconst PrivateRoutes = () => {\n    const [ team, setTeam ] = useState([]);\n\n    return(\n        <TeamState.Provider value={{team, setTeam}}>\n            <Switch>\n                <Route exact path=\"/\" component={Home}/>\n                <Route exact path=\"/search\" component={Search}/>\n                <Route exact path=\"/details/:id\" component={Details}/>\n                <Redirect to=\"/\"/>\n            </Switch>\n        </TeamState.Provider>\n    );\n}\n\nexport default PrivateRoutes;","import React, { useContext } from 'react';\nimport { Validation } from '../../routes/Routes';\nimport axios from 'axios';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\n\nconst Login = () => {\n    const { token, setToken }= useContext(Validation);\n\n    return(\n        <>\n        <div className=\"container\">\n            <h1>INICIAR SESIÓN</h1>\n            <Formik\n                initialValues={{\n                    mail:\"\",\n                    pass:\"\"\n                }}\n                onSubmit={(values, { resetForm })=>{ \n                    axios({\n                        method:\"post\",\n                        url:\"http://challenge-react.alkemy.org/\",\n                        data:{\n                            email: values.mail,\n                            password: values.pass\n                        }\n                    })\n                    .then((res)=>{\n                        localStorage.setItem(\"loginToken\", res.data.token);\n                        setToken(res.data.token);\n                    })\n                    .catch((err)=>{\n                        alert(err);\n                        resetForm();\n                    });\n                }}\n                validate={(values)=>{\n                    let errors = {}\n                    if(!values.mail){\n                        errors.mail = \"Por favor ingresar un e-mail para continuar.\"\n                    }\n                    if(!values.pass){\n                        errors.pass = \"Por favor ingresa una contraseña para continuar.\"\n                    }\n                    return errors;\n                }}\n            >\n                {({errors})=>(\n                    <Form>\n                        <div>\n                            <Field \n                                name=\"mail\" \n                                type=\"text\" \n                            />\n                        </div>\n                        <div className=\"error\">\n                            <ErrorMessage name=\"mail\" component={()=>(<span className=\"text-danger\">{errors.mail}</span>)}/>\n                        </div>\n                        <div>\n                            <Field \n                                name=\"pass\"\n                                type=\"password\" \n                            />\n                        </div>\n                        <div className=\"error\">\n                            <ErrorMessage name=\"pass\" component={()=>(<span className=\"text-danger\">{errors.pass}</span>)}/>\n                        </div>\n                        <input type=\"submit\" value=\"Ingresar\"/>\n                    </Form>)\n                }   \n            </Formik>\n        </div>\n        </>\n    );\n}\n\nexport default Login;","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Login from '../Pages/PublicPages/Login';\n\nconst PublicRoutes = ()=>{\n    return(\n        <Switch>\n            <Route exact path=\"/\" component={Login}/>\n            <Redirect to=\"/\"/>\n        </Switch>\n    );\n}\n\nexport default PublicRoutes;","import React, { useState, useEffect } from 'react';\nimport PrivateRoutes from './PrivateRoutes';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport PublicRoutes from './PublicRoutes';\n\nexport const Validation = React.createContext();\nexport const Path = React.createContext();\n\nconst Routes = () => {\n    const [ token, setToken ] = useState(\"\");\n\n    useEffect(() => {\n        if(token===\"\"&&localStorage.getItem(\"loginToken\")!==undefined){\n            setToken(localStorage.getItem(\"loginToken\"));\n        }\n    })\n    return(\n        <Router>\n            <Path.Provider value=\"https://www.superheroapi.com/api.php/10224262264160982/\">\n                <Validation.Provider value={{token, setToken}}>\n                    {\n                        token!==\"\"&&localStorage.getItem(\"loginToken\")===token\n                        ?\n                        <PrivateRoutes/>\n                        :\n                        <PublicRoutes/>\n                    }\n                </Validation.Provider>\n            </Path.Provider>\n        </Router>\n    );\n\n}\n\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Routes from './routes/Routes';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}